{"version":3,"file":"static/js/520.2fe3a7bd.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://phonebook-frontend/./src/components/ContactForm/contactForm.module.css?2173","components/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://phonebook-frontend/./src/components/Contacts/contacts.module.css?1e09","components/Contacts/Contacts.jsx","webpack://phonebook-frontend/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://phonebook-frontend/./src/pages/ContactsPage/contactsPage.module.css?6e18","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contactForm_container__dyO4h\",\"form\":\"contactForm_form__3ay0L\",\"inputGroup\":\"contactForm_inputGroup__ExlEu\",\"label\":\"contactForm_label__WakW9\",\"input\":\"contactForm_input__wCtae\",\"btn\":\"contactForm_btn__qtr3a\",\"changeBgColor\":\"contactForm_changeBgColor__05-0a\"};","import { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAddContact } from \"../../redux/contacts/contacts-operations\";\nimport styles from \"./contactForm.module.css\";\n\nconst INITIAL_VALUE = {\n  name: \"\",\n  phone: \"\",\n  // email: \"\",\n};\n\nconst Form = () => {\n  const [value, setValue] = useState({ ...INITIAL_VALUE });\n\n  const focusRef = useRef(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    focusRef.current.focus();\n  }, []);\n\n  const onAddContact = (data) => {\n    dispatch(fetchAddContact(data));\n  };\n\n  const handleInput = ({ currentTarget: { name, value } }) => {\n    setValue((prevValue) => ({\n      ...prevValue,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    focusRef.current.focus();\n\n    onAddContact(value);\n\n    reset();\n  };\n\n  const reset = () => {\n    setValue({ ...INITIAL_VALUE });\n  };\n\n  const { name, email = \"\", phone } = value;\n\n  return (\n    <div className={styles.container}>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <div className={styles.inputGroup}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleInput}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              className={styles.input}\n              ref={focusRef}\n              required\n            />\n          </label>\n          <label className={styles.label}>\n            Phone\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              value={phone}\n              onChange={handleInput}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              className={styles.input}\n              required\n            />\n          </label>\n          <label className={styles.label}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleInput}\n              pattern=\"/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\"\n              title=\"Email may contain letters, digits, dash and can`t contain spaces, and must contain @\"\n              className={styles.input}\n            />\n          </label>\n          <button type=\"submit\" className={styles.btn}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","export const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts_list__QBWBd\",\"item\":\"contacts_item__82PmL\",\"wrapper\":\"contacts_wrapper__oTW5p\",\"itemTitle\":\"contacts_itemTitle__bOWRW\",\"itemText\":\"contacts_itemText__gXmJX\",\"btn\":\"contacts_btn__w2CK-\",\"changeBgColor\":\"contacts_changeBgColor__TJIvz\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts } from \"../../redux/contacts/contacts-selectors\";\nimport { fetchDeleteContact } from \"../../redux/contacts/contacts-operations\";\nimport { selectFilter } from \"../../redux/filter/filter-selectors\";\nimport styles from \"./contacts.module.css\";\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const filterSearch = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const newContact = contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return newContact;\n  };\n\n  const filtredContacts = filterSearch();\n\n  const onDeleteContact = (_id) => {\n    dispatch(fetchDeleteContact(_id));\n  };\n\n  return (\n    <div>\n      <ul className={styles.list}>\n        {filtredContacts.map(({ _id, name, phone, email }) => {\n          return (\n            <li className={styles.item} key={_id}>\n              <div className={styles.wrapper}>\n                <p className={styles.itemTitle}>{name}</p>\n                <p className={styles.itemText}>{phone}</p>\n                <p className={styles.itemText}>{email}</p>\n              </div>\n              <button\n                onClick={() => onDeleteContact(_id)}\n                className={styles.btn}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"filter_container__8MH92\",\"inputGroup\":\"filter_inputGroup__osn-F\",\"input\":\"filter_input__sX944\",\"title\":\"filter_title__k4Z+2\",\"item\":\"filter_item__3oaqa\",\"btn\":\"filter_btn__vMALR\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectFilter } from \"../../redux/filter/filter-selectors\";\nimport { addFilter } from \"../../redux/filter/filter-slice\";\nimport styles from \"./filter.module.css\";\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = (e) => {\n    const { value } = e.target;\n    dispatch(addFilter(value));\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.inputGroup}>\n        <label className={styles.title}>Find contacts by name</label>\n        <input\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          className={styles.input}\n          onChange={onFilter}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"contactsPage_section__6BZAZ\",\"container\":\"contactsPage_container__qArTW\",\"sectionTitle\":\"contactsPage_sectionTitle__-HxyL\",\"wrapper\":\"contactsPage_wrapper__37PRz\",\"contactsListWrapper\":\"contactsPage_contactsListWrapper__LipHt\",\"error\":\"contactsPage_error__ftldK\"};","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from \"../../redux/contacts/contacts-selectors\";\nimport { fetchContacts } from \"../../redux/contacts/contacts-operations\";\n// import { Blocks } from \"react-loader-spinner\";\n\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Contacts from \"../../components/Contacts/Contacts\";\nimport Filter from \"../../components/Filter/Filter\";\n\nimport styles from \"./contactsPage.module.css\";\n\nconst ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  // const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {error ? (\n        <p className={styles.error}>Something went wrong. Try again later.</p>\n      ) : (\n        <div className={styles.section}>\n          <div className={styles.container}>\n            <h1 className={styles.sectionTitle}>PhoneBook</h1>\n            <div className={styles.wrapper}>\n              <ContactForm />\n              <div className={styles.contactsListWrapper}>\n                <h2>Contacts</h2>\n                <Filter />\n                {contacts.length !== 0 && <Contacts />}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectError","error","INITIAL_VALUE","name","phone","_useState","useState","_objectSpread","_useState2","_slicedToArray","value","setValue","focusRef","useRef","dispatch","useDispatch","useEffect","current","focus","handleInput","_ref","_ref$currentTarget","currentTarget","prevValue","_defineProperty","reset","_value$email","email","_jsx","className","styles","children","onSubmit","event","data","preventDefault","fetchAddContact","_jsxs","type","onChange","pattern","title","ref","required","selectFilter","filter","useSelector","filtredContacts","item","toLowerCase","includes","map","_id","onClick","fetchDeleteContact","onDeleteContact","e","target","addFilter","fetchContacts","_Fragment","ContactForm","Filter","length","Contacts"],"sourceRoot":""}